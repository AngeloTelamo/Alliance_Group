@using ASI.Basecode.Services.ServiceModels
@model ReviewList
@using static ASI.Basecode.Resources.Views.Screen
@{
    ViewData["Title"] = "Review Lists";
}
@section styles {
	<link href="~/css/reviewlist.css" rel="stylesheet" />
}
<div class="text-center">
    <h1 class="display-4">Review List</h1>
    <p>Test page 1</p>
    @using (Html.BeginForm("SearchReview", "Admin"))
    {
        <div class="row">
            <div class="col-sm-2">
                Review Name
            </div>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.Filters.ReviewName)
            </div>
            <div class="col-sm-2">
                Book ID
            </div>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.Filters.BookIds)
            </div>
        </div>
 
        <div class="row" style="margin-top: 35px; margin-bottom: 35px">
            <div class="col" style="padding: 0px 40px 0px 40px; display:flex; justify-content:flex-end">
                <input class="btn btn-dark" type="submit" name="action" value="search" style="margin-right: 15px" />
                <input class="btn btn-light" type="button" name="action" value="clear" onclick="clearFilters()" />
            </div>
        </div>
    }

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th>
                    Review ID
                </th>
                <th>
                    Book ID
                </th>
                <th>
                    Reviewer Name
                </th>
                <th>
                    Comments
                </th>
                <th>
                    Review Date
                </th>
                <th>
                    Book Title
                </th>
                <th>
                    Book Genre
                </th>
                <th>
                    Ratings
                </th>
                <th>

                </th>
            </tr>
        </thead>

        <tbody>

            @foreach (var item in Model.ReviewLists)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reviews.reviewId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BookMaster.BookId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reviews.ReviewName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reviews.ReviewComments)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reviews.ReviewDate)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.BookMaster.BookTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BookMaster.BookGenreName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reviews.ReviewRatings)
                    </td>
                    <td>
                        <a asp-controller="Admin" asp-action="RemoveReview" asp-route-reviewId="@item.Reviews.reviewId">Delete Reviews</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p>Total Reviews: @Model.TotalReviews</p>

    @Html.ActionLink("Return to main", "AdminBookList", "Admin")
</div>
@section scripts {
    <script>
        var listItems = '@Html.Raw(Json.Serialize(@Model.ReviewLists))';
        console.table(JSON.parse(listItems));
    </script>
}
